[ConsoleHistoryPython]
History=print heelo
History=print "hello"
History=print sys.version
History=chair = '/Game/StarterContent/Props/SM_Chair.SM_Chair'
History=chair = unreal.load_asset('/Game/StarterContent/Props/SM_Chair.SM_Chair')
History=print help(chair)
History=for attribute in chair:
History="for attribute in chair:\r\n\tprint attribute"
History="for attribute in dir(chair):\r\n\tprint attribute"
History=import os
History=os.startfile(".")
History=os.startfile("/Game")
History=os.startfile("/Game/.")
History=os.startfile("./Game/")
History=print chair
History=import sys
History="for path in sys.path:\r\n\tprint path"
History=print help(unreal.EditorAssetLibrary)
History=print Blueprint'/Game/BP_Test.BP_Test'
History=print help(duplicate_asset())
History=duplicate_asset("test2",'/Game','/Game/BP_Test.BP_Test')
History=unreal.log('test')
History=unreal.duplicate_asset("test2",'/Game','/Game/BP_Test.BP_Test')
History=unreal.AssetTools.duplicate_asset("test2",'/Game','/Game/BP_Test.BP_Test')
History=unreal.AssetTools.duplicate_asset("test2",'/Game',unreal.load_asset('/Game/BP_Test.BP_Test'))
History=testBP = unreal.load_asset('/Game/BP_Test.BP_Test')
History=unreal.AssetTools.duplicate_asset("test2",'/Game',testBP)
History=print testBP
History=print type(testBP)
History=unreal.AssetTools.duplicate_asset("test2",'/Game/',testBP)
History=unreal.get_editor_property(testBP)
History=import test1
History="import unreal\r\ntotal_frames = 10000\r\ntext_label = \"Working!\"\r\nwith unreal.ScopedSlowTask(total_frames, text_label) as slow_task:\r\n    slow_task.make_dialog(True)               # Makes the dialog visible, if it isn\'t already\r\n    for i in range(total_frames):\r\n        if slow_task.should_cancel():         # True if the user has pressed Cancel in the UI\r\n            break\r\n        slow_task.enter_progress_frame(1)     # Advance progress by one frame.\r\n                                            # You can also update the dialog text in this call, if you want.\r\n        # ...                                   # Now do work for the current frame here!"
History=test
History="import unreal\r\nv1 = unreal.Vector()\r\nv1.x = 10\r\nv2 = unreal.Vector(10, 20, 30)\r\nv3 = (v1 + v2) * 2\r\nprint v3"
History="import unreal\r\nobj = unreal.MediaPlayer()\r\n# Modifying a property directly can have different results\r\n# than changing settings in the Editor UI.\r\n# Generally you\'ll want to avoid setting these values directly, like this:\r\nobj.play_on_open = True\r\n# This way of accessing the property will have exactly the same\r\n# result as changing the setting in the Editor UI:\r\nobj.set_editor_property(\"play_on_open\", True)\r\n# Both ways of reading the value are equivalent.\r\n# When a class exposes a property in both ways, you can use either:\r\nplay_value = obj.play_on_open\r\nplay_value = obj.get_editor_property(\"play_on_open\")"
History=import SomeFunctions as sf
History=sf.sayHello()
History=print help(sf)
History=sf.addSomeNumbers(4, 6)
History=import progress_dialogs
History=import AssetFunctions
History=AssetFunctions.importMyAssets
History=AssetFunctions.importMyAssets()
History=reload AssetFunction
History=reload AssetFunctions
History="import AssetFunctions\r\nAssetFunctions.importMyAssets()"
History="import AssetFunctions\r\nreload(AssetFunctions)\r\nAssetFunctions.importMyAssets()"

[ConsoleHistory]
History=py "print hello"
History=for path in sys.path:
History=py "test1.py"
History=test
History=py "progress_dialogs.py"


